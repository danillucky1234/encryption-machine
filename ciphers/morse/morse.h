#ifndef MORSE_H
#define MORSE_H

#include "../../stdafx.h"

std::string morse (const bool& bDecrypt, const std::string& message, const std::string& keyword);
std::string encrypt_morse (const std::string& message);
std::string decrypt_morse (const std::string& message);

const std::string middleDot = "\u2022";
const std::string dash = "-";
const std::map<char, std::string> morseCode = 
    {
        // symbols
        {'.', middleDot + middleDot + middleDot + middleDot + middleDot + middleDot},
        {',', middleDot + dash + middleDot + dash + middleDot + dash},
        {':', dash + dash + dash + middleDot + middleDot + middleDot},
        {';', dash + middleDot + dash + middleDot + dash + middleDot},
        {'(', dash + middleDot + dash + dash + middleDot + dash},
        {')', dash + middleDot + dash + dash + middleDot + middleDot},
        {'\'', middleDot + dash + dash + dash + dash + middleDot},
        {'\"', middleDot + dash + middleDot + middleDot + dash + middleDot},
        {'-', dash + middleDot + middleDot + middleDot + middleDot + dash},
        {'/', dash + middleDot + middleDot + dash + middleDot},
        {'?', middleDot + middleDot + dash + dash + middleDot + middleDot},
        {'!', dash + dash + middleDot + middleDot + dash + dash},
        {'@', middleDot + dash + dash + middleDot + dash + middleDot},
        {'+', middleDot + dash + middleDot + dash + middleDot},
        {'_', middleDot + middleDot + dash + dash + middleDot + dash},
        {'$', middleDot + middleDot + middleDot + dash + middleDot + middleDot + dash},
        {'&', middleDot + dash + middleDot + middleDot + middleDot},
        {'\\', dash + middleDot + middleDot + dash + middleDot + dash},
        {'*', middleDot + dash + middleDot + middleDot + dash},
        {'#', dash + dash + middleDot + dash + middleDot},
        {'[', middleDot + dash + dash + dash + dash},
        {']', middleDot + dash + dash + dash + dash + dash},
        {'%', middleDot + dash + dash + middleDot + middleDot},
        {'^', middleDot + middleDot + dash + middleDot + dash + middleDot},
        {' ', "  "},
        
        // numbers
        {'0', dash + dash + dash + dash + dash},
        {'1', middleDot + dash + dash + dash + dash},
        {'2', middleDot + middleDot + dash + dash + dash},
        {'3', middleDot + middleDot + middleDot + dash + dash},
        {'4', middleDot + middleDot + middleDot + middleDot + dash},
        {'5', middleDot + middleDot + middleDot + middleDot + middleDot},
        {'6', dash + middleDot + middleDot + middleDot + middleDot},
        {'7', dash + dash + middleDot + middleDot + middleDot},
        {'8', dash + dash + dash + middleDot + middleDot},
        {'9', dash + dash + dash + dash + middleDot},

        // lowercase letters
        {'a', middleDot + dash},
        {'b', dash + middleDot + middleDot + middleDot},
        {'c', dash + middleDot + dash + middleDot},
        {'d', dash + middleDot + middleDot},
        {'e', middleDot},
        {'f', middleDot + middleDot + dash + middleDot},
        {'g', dash + dash + middleDot},
        {'h', middleDot + middleDot + middleDot + middleDot},
        {'i', middleDot + middleDot},
        {'j', middleDot + dash + dash + dash},
        {'k', dash + middleDot + dash},
        {'l', middleDot + dash + middleDot + middleDot},
        {'m', dash + dash},
        {'n', dash + middleDot},
        {'o', dash + dash + dash},
        {'p', middleDot + dash + dash + middleDot},
        {'q', dash + dash + middleDot + dash},
        {'r', middleDot + dash + middleDot},
        {'s', middleDot + middleDot + middleDot},
        {'t', dash},
        {'u', middleDot + middleDot + dash},
        {'v', middleDot + middleDot + middleDot + dash},
        {'w', middleDot + dash + dash},
        {'x', dash + middleDot + middleDot + dash},
        {'y', dash + middleDot + dash + dash},
        {'z', dash + dash + middleDot + middleDot},

        // uppercase letter
        {'A', middleDot + dash},
        {'B', dash + middleDot + middleDot + middleDot},
        {'C', dash + middleDot + dash + middleDot},
        {'D', dash + middleDot + middleDot},
        {'E', middleDot},
        {'F', middleDot + middleDot + dash + middleDot},
        {'G', dash + dash + middleDot},
        {'H', middleDot + middleDot + middleDot + middleDot},
        {'I', middleDot + middleDot},
        {'J', middleDot + dash + dash + dash},
        {'K', dash + middleDot + dash},
        {'L', middleDot + dash + middleDot + middleDot},
        {'M', dash + dash},
        {'N', dash + middleDot},
        {'O', dash + dash + dash},
        {'P', middleDot + dash + dash + middleDot},
        {'Q', dash + dash + middleDot + dash},
        {'R', middleDot + dash + middleDot},
        {'S', middleDot + middleDot + middleDot},
        {'T', dash},
        {'U', middleDot + middleDot + dash},
        {'V', middleDot + middleDot + middleDot + dash},
        {'W', middleDot + dash + dash},
        {'X', dash + middleDot + middleDot + dash},
        {'Y', dash + middleDot + dash + dash},
        {'Z', dash + dash + middleDot + middleDot},
    };

const std::map<std::string, char> decodedMorseCode = 
    {
        // symbols
        {middleDot + middleDot + middleDot + middleDot + middleDot + middleDot, '.'},
        {middleDot + dash + middleDot + dash + middleDot + dash, ','},
        {dash + dash + dash + middleDot + middleDot + middleDot, ':'},
        {dash + middleDot + dash + middleDot + dash + middleDot, ';'},
        {dash + middleDot + dash + dash + middleDot + dash, '('},
        {dash + middleDot + dash + dash + middleDot + middleDot, ')'},
        {middleDot + dash + dash + dash + dash + middleDot, '\''},
        {middleDot + dash + middleDot + middleDot + dash + middleDot, '\"'},
        {dash + middleDot + middleDot + middleDot + middleDot + dash, '-'},
        {dash + middleDot + middleDot + dash + middleDot, '/'},
        {middleDot + middleDot + dash + dash + middleDot + middleDot, '?'},
        {dash + dash + middleDot + middleDot + dash + dash, '!'},
        {middleDot + dash + dash + middleDot + dash + middleDot, '@'},
        {middleDot + dash + middleDot + dash + middleDot, '+'},
        {middleDot + middleDot + dash + dash + middleDot + dash, '_'},
        {middleDot + middleDot + middleDot + dash + middleDot + middleDot + dash, '$'},
        {middleDot + dash + middleDot + middleDot + middleDot, '&'},
        {dash + middleDot + middleDot + dash + middleDot + dash, '\\'},
        {middleDot + dash + middleDot + middleDot + dash, '*'},
        {dash + dash + middleDot + dash + middleDot, '#'},
        {middleDot + dash + dash + dash + dash, '['},
        {middleDot + dash + dash + dash + dash + dash, ']'},
        {middleDot + dash + dash + middleDot + middleDot, '%'},
        {middleDot + middleDot + dash + middleDot + dash + middleDot, '^'},
        {" ", ' '},

        // numbers
        {dash + dash + dash + dash + dash, '0'},
        {middleDot + dash + dash + dash + dash, '1'},
        {middleDot + middleDot + dash + dash + dash, '2'},
        {middleDot + middleDot + middleDot + dash + dash, '3'},
        {middleDot + middleDot + middleDot + middleDot + dash, '4'},
        {middleDot + middleDot + middleDot + middleDot + middleDot, '5'},
        {dash + middleDot + middleDot + middleDot + middleDot, '6'},
        {dash + dash + middleDot + middleDot + middleDot, '7'},
        {dash + dash + dash + middleDot + middleDot, '8'},
        {dash + dash + dash + dash + middleDot, '9'},

        // lowercase letters
        {middleDot + dash, 'a'},
        {dash + middleDot + middleDot + middleDot, 'b'},
        {dash + middleDot + dash + middleDot, 'c'},
        {dash + middleDot + middleDot, 'd'},
        {middleDot, 'e'},
        {middleDot + middleDot + dash + middleDot, 'f'},
        {dash + dash + middleDot, 'g'},
        {middleDot + middleDot + middleDot + middleDot, 'h'},
        {middleDot + middleDot, 'i'},
        {middleDot + dash + dash + dash, 'j'},
        {dash + middleDot + dash, 'k'},
        {middleDot + dash + middleDot + middleDot, 'l'},
        {dash + dash, 'm'},
        {dash + middleDot, 'n'},
        {dash + dash + dash, 'o'},
        {middleDot + dash + dash + middleDot, 'p'},
        {dash + dash + middleDot + dash, 'q'},
        {middleDot + dash + middleDot, 'r'},
        {middleDot + middleDot + middleDot, 's'},
        {dash, 't'},
        {middleDot + middleDot + dash, 'u'},
        {middleDot + middleDot + middleDot + dash, 'v'},
        {middleDot + dash + dash, 'w'},
        {dash + middleDot + middleDot + dash, 'x'},
        {dash + middleDot + dash + dash, 'y'},
        {dash + dash + middleDot + middleDot, 'z'},

        // uppercase letter
        {middleDot + dash, 'A'},
        {dash + middleDot + middleDot + middleDot, 'B'},
        {dash + middleDot + dash + middleDot, 'C'},
        {dash + middleDot + middleDot, 'D'},
        {middleDot, 'E'},
        {middleDot + middleDot + dash + middleDot, 'F'},
        {dash + dash + middleDot, 'G'},
        {middleDot + middleDot + middleDot + middleDot, 'H'},
        {middleDot + middleDot, 'I'},
        {middleDot + dash + dash + dash, 'J'},
        {dash + middleDot + dash, 'K'},
        {middleDot + dash + middleDot + middleDot, 'L'},
        {dash + dash, 'M'},
        {dash + middleDot, 'N'},
        {dash + dash + dash, 'O'},
        {middleDot + dash + dash + middleDot, 'P'},
        {dash + dash + middleDot + dash, 'Q'},
        {middleDot + dash + middleDot, 'R'},
        {middleDot + middleDot + middleDot, 'S'},
        {dash, 'T'},
        {middleDot + middleDot + dash, 'U'},
        {middleDot + middleDot + middleDot + dash, 'V'},
        {middleDot + dash + dash, 'W'},
        {dash + middleDot + middleDot + dash, 'X'},
        {dash + middleDot + dash + dash, 'Y'},
        {dash + dash + middleDot + middleDot, 'Z'},
    };



#endif // MORSE_H